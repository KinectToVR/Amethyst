name: K2App (Amethyst) Workflow
on: [push] # Keep it push-only I dare you!

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.1.0
        id: checkout_code

      # This is commented out since we've got:
      # - vcpkg (.dockerprep/nolink)
      # - vs2022 (.dockerprepvc)
      # - choco (.dockerprepchoco)
      # already set up on our (or my?)
      # self-hosted vm (on-premises vmware)
      
      #- name: Install Chocolatey Packages
      #  run: choco install cmake 7zip.install sed git
      
      #- name: Restore or install vcpkg
      #  uses: lukka/run-vcpkg@v10
      #  with:
      #    setupOnly: true
      #    vcpkgGitCommitId: 6ba505cf2c1752d8ea5abb21427e23ff89dc486f

      - name: Install Libraries
        shell: pwsh
        run: |
          vcpkg install boost-serialization:x64-windows boost-assign:x64-windows `
          boost-filesystem:x64-windows boost-dll:x64-windows `
          boost-property-tree:x64-windows boost-foreach:x64-windows `
          boost-lexical-cast:x64-windows boost-unordered:x64-windows `
          boost-math:x64-windows boost-algorithm:x64-windows `
          curlpp:x64-windows kinectsdk1:x64-windows kinectsdk2:x64-windows

          sed -e 's/Kinect10.lib;//g' -i "device_KinectV1/device_KinectV1.vcxproj"
          sed -e 's/Kinect20.lib;//g' -i "device_KinectV2/device_KinectV2.vcxproj"

      - name: Install vcpkg integration
        run: vcpkg integrate install
        
      - name: Clear vcpkg Downloads
        shell: pwsh
        run: |
          Remove-Item -LiteralPath "vcpkg/buildtrees" -Force -Recurse -ErrorAction Ignore
          Remove-Item -LiteralPath "vcpkg/downloads" -Force -Recurse -ErrorAction Ignore

      - name: Setup Dependencies
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri 'https://github.com/microsoft/vswhere/releases/latest/download/vswhere.exe' -OutFile './vswhere.exe'
          $msbuild = "$("$(.\vswhere.exe -legacy -prerelease -products * -format json | Select-String -Pattern "2022" | `
              Select-String -Pattern "Studio" | Select-Object -First 1 | Select-String -Pattern "installationPath")" `
              -replace('"installationPath": "','') -replace('",',''))".Trim() + "\\MSBuild\\Current\\Bin\\MSBuild.exe"

          git clone https://github.com/ValveSoftware/openvr ./external/openvr
          git clone https://gitlab.com/libeigen/eigen ./external/eigen
          cd ./external/eigen
          git reset --hard 1fd5ce1002a6f30e1169b529b291216a18be2f7e
          cd ../..

          git clone https://github.com/google/glog.git ./external/glog
          cd ./external/glog
          git reset --hard f8c8e99fdfb998c2ba96cfb470decccf418f0b30
          mkdir vcbuild; cd ./vcbuild
          &"C:/Program Files/CMake/bin/cmake.exe" .. -DBUILD_SHARED_LIBS=ON
          &"$msbuild" glog.vcxproj "/p:Configuration=Release;Platform=x64"
          cd ../../..

          git clone https://github.com/gflags/gflags.git ./external/gflags
          cd ./external/gflags
          git reset --hard 827c769e5fc98e0f2a34c47cef953cc6328abced
          mkdir vcbuild; cd ./vcbuild
          &"C:/Program Files/CMake/bin/cmake.exe" .. -DBUILD_SHARED_LIBS=ON
          &"$msbuild" gflags.vcxproj "/p:Configuration=Release;Platform=x64"

      - name: Build Amethyst
        shell: pwsh
        run: |
          $msbuild = "$("$(.\vswhere.exe -legacy -prerelease -products * -format json | Select-String -Pattern "2022" | `
              Select-String -Pattern "Studio" | Select-Object -First 1 | Select-String -Pattern "installationPath")" `
              -replace('"installationPath": "','') -replace('",',''))".Trim() + "\\MSBuild\\Current\\Bin\\MSBuild.exe"
          
          &"$msbuild" KinectToVR.sln /t:restore "/p:Configuration=Release;Platform=x64;RestorePackagesConfig=true"
          &"$msbuild" KinectToVR.sln /m:3 "/p:Configuration=Release;Platform=x64;BuildInParallel=true"

      - name: Get short commit SHA
        id: slug
        run: "$slug = '::set-output name=slug::' + $env:GITHUB_SHA.SubString(0,7); echo $slug"

      # This is commented out since now we're gonna be pushing
      # releases to another repo rather than saving artifacts

      # - name: Upload Amethyst's Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: K2App-Release-${{ steps.slug.outputs.slug }}
      #     path: x64/Release
      #     if-no-files-found: error

      - name: Prepare Release zip
        run: |
          mkdir Release; cd Release
          cp -r ../x64/Release/KinectToVR/* ./
          cp -r ../x64/Release/driver/KinectToVR/* ./KinectToVR
          7z a "Amethyst-Release-${{ steps.slug.outputs.slug }}.zip" *