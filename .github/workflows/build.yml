name: K2App (Amethyst) Workflow
on: [push]

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.1.0
        id: checkout_code

      - name: Setup Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Invoke-Expression (Get-Content .dockerprepchoco -Raw)

      - name: Restore or install vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          setupOnly: true
          vcpkgGitCommitId: 6ba505cf2c1752d8ea5abb21427e23ff89dc486f

      - name: Install vcpkg integration
        run: |
          vcpkg update
          vcpkg integrate install

      - name: Install Libraries
        run: vcpkg install boost-serialization:x64-windows boost-assign:x64-windows boost-filesystem:x64-windows boost-dll:x64-windows boost-property-tree:x64-windows boost-foreach:x64-windows boost-lexical-cast:x64-windows boost-unordered:x64-windows boost-math:x64-windows boost-algorithm:x64-windows curlpp:x64-windows kinectsdk1:x64-windows kinectsdk2:x64-windows

      - name: Clear vcpkg Downloads
        shell: powershell
        run: |
          Remove-Item -LiteralPath "vcpkg/buildtrees" -Force -Recurse -ErrorAction Ignore
          Remove-Item -LiteralPath "vcpkg/downloads" -Force -Recurse -ErrorAction Ignore

      - name: Setup Dependencies
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Invoke-Expression (Get-Content .dockerdeps_gh -Raw)

      - name: Build Amethyst
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Invoke-Expression (Get-Content .dockerbuild_gh -Raw)

      - name: Get short commit SHA
        id: slug
        run: "$slug = '::set-output name=slug::' + $env:GITHUB_SHA.SubString(0,7); echo $slug"

      - name: Upload Amethyst's Artifact
        uses: actions/upload-artifact@v2
        with:
          name: K2App-Release-${{ steps.slug.outputs.slug }}
          path: x64/Release
          if-no-files-found: error

      