name: K2App (Amethyst) Workflow
on: [push] # Keep it push-only I dare you!

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.1.0
        id: checkout_code

      # This is commented out since we've got:
      # - vcpkg (.dockerprep/nolink)
      # - vs2022 (.dockerprepvc)
      # - choco (.dockerprepchoco)
      # already set up on our (or my?)
      # self-hosted vm (on-premises vmware)
      
      #- name: Install Chocolatey Packages
      #  run: choco install cmake 7zip.install sed git
      
      #- name: Restore or install vcpkg
      #  uses: lukka/run-vcpkg@v10
      #  with:
      #    setupOnly: true
      #    vcpkgGitCommitId: 6ba505cf2c1752d8ea5abb21427e23ff89dc486f

      - name: Install Libraries
        shell: pwsh
        run: |
          vcpkg install boost-serialization:x64-windows boost-assign:x64-windows `
          boost-filesystem:x64-windows boost-dll:x64-windows `
          boost-property-tree:x64-windows boost-foreach:x64-windows `
          boost-lexical-cast:x64-windows boost-unordered:x64-windows `
          boost-math:x64-windows boost-algorithm:x64-windows `
          curlpp:x64-windows kinectsdk1:x64-windows kinectsdk2:x64-windows

          sed -e 's/Kinect10.lib;//g' -i "device_KinectV1/device_KinectV1.vcxproj"
          sed -e 's/Kinect20.lib;//g' -i "device_KinectV2/device_KinectV2.vcxproj"

      - name: Install vcpkg integration
        run: vcpkg integrate install
        
      - name: Clear vcpkg Downloads
        shell: pwsh
        run: |
          Remove-Item -LiteralPath "vcpkg/buildtrees" -Force -Recurse -ErrorAction Ignore
          Remove-Item -LiteralPath "vcpkg/downloads" -Force -Recurse -ErrorAction Ignore

      - name: Setup Dependencies
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Invoke-Expression (Get-Content .dockerdeps -Raw)

      - name: Build Amethyst
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Invoke-Expression (Get-Content .dockerbuild -Raw)

      - name: Get short commit SHA
        id: slug
        run: "$slug = '::set-output name=slug::' + $env:GITHUB_SHA.SubString(0,7); echo $slug"

      # This is commented out since now we're gonna be pushing
      # releases to another repo rather than saving artifacts

      # - name: Upload Amethyst's Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: K2App-Release-${{ steps.slug.outputs.slug }}
      #     path: x64/Release
      #     if-no-files-found: error

      - name: Prepare Release zip
        run: |
          mkdir Release; cd Release
          cp -r ../x64/Release/KinectToVR/* ./
          cp -r ../x64/Release/driver/KinectToVR/* ./KinectToVR
          7z a "Amethyst-Release-${{ steps.slug.outputs.slug }}.zip" *

      - name: Log in to GitHub
        run: |
          Invoke-Expression 'cmd /c "echo ${{ secrets.pat }} | `"C:/Program Files/GitHub CLI/gh.exe`" auth login --hostname GitHub.com --with-token || exit 0"'

      - name: Check Release Version
        id: release_version
        run: |
          $release_version = '::set-output name=release_version::' + $([int]$([regex]::Match($(curl --silent --location https://github.com/KinectToVR/Amethyst-Releases/releases/latest), "/ame(.*?)`"").Groups[1].Value) + 1); echo $release_version

      - name: Create Release
        run: |
          &"C:/Program Files/GitHub CLI/gh.exe" release create ame${{ steps.release_version.outputs.release_version }} --notes `
          @"
          ### KinectToVR v1.0.0 / Ame${{ steps.release_version.outputs.release_version }} Technical Preview
          Short Commit ID: ${{ steps.slug.outputs.slug }}

          Please note that this is an automated release.
          Setup instructions are also available on discord
          For help with please hit ```公彦赤屋先#5023``` or ```#development```

          ### Deployment requirements:
          - Install [VCRedist 2022](https://aka.ms/vs/17/release/vc_redist.x64.exe)
          - Install the [Windows App SDK Runtime](https://aka.ms/windowsappsdk/1.0-stable/msix-installer)

          ### Setup for testing:
          - Delete **everything** in ```C:/K2EX``` (or wherever is it installed)
          - Put Release zip in ```C:/K2EX``` (or wherever is it installed)
          - Just extract the zip there. __File tree has to remain the same as before__

          ### Reports: 
          - Go to discord and post log files from ``````%AppData%/KinectToVR/logs``````
          "@ --repo KinectToVR/Amethyst-Releases `
          --target main --title "Amethyst Technical Preview (Ame${{ steps.release_version.outputs.release_version }})" `
          "Release/Amethyst-Release-${{ steps.slug.outputs.slug }}.zip"