<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button.Error.Dismiss.Content" xml:space="preserve">
    <value>Verwerfen</value>
  </data>
  <data name="Buttons.ReManifest.Content" xml:space="preserve">
    <value>SteamVR-Manifests neu installieren</value>
  </data>
  <data name="Buttons.ReRegister.Content" xml:space="preserve">
    <value>SteamVR Treibereintrag neu registrieren</value>
  </data>
  <data name="Buttons.Reset.Content" xml:space="preserve">
    <value>Konfiguration löschen und Amethyst neustarten</value>
  </data>
  <data name="Buttons.RestartSteamVR.Content" xml:space="preserve">
    <value>SteamVR neustrarten</value>
  </data>
  <data name="Buttons.ViewLogs.Content" xml:space="preserve">
    <value>Öffne den Log-Ordner für Amethyst</value>
  </data>
  <data name="Captions.AutoStart.Text" xml:space="preserve">
    <value>Amethyst automatisch mit SteamVR starten</value>
  </data>
  <data name="Captions.CalibrateExtFlip.Text" xml:space="preserve">
    <value>Zum Kalibrieren klicken</value>
  </data>
  <data name="Captions.ExtFlip.Text" xml:space="preserve">
    <value>Wenn eingeschaltet: Amethyst entscheidet ob man sich umgedreht hat, 
indem es den derzeit aktiven Taillen-Tracker in SteamVR überprüft</value>
  </data>
  <data name="Captions.ExtFlipStatus.Active" xml:space="preserve">
    <value>Erkannt und gestartet!</value>
  </data>
  <data name="Captions.ExtFlipStatus.Disabled" xml:space="preserve">
    <value>Untauglich!</value>
  </data>
  <data name="Captions.ExtFlipStatus.NoTracker" xml:space="preserve">
    <value>Kein externer Hüfttracker oder Override erkannt!</value>
  </data>
  <data name="Captions.FaceTheKinect.Text" xml:space="preserve">
    <value>Schaue auf die Richtung der Kinect!</value>
  </data>
  <data name="Captions.Filters.Orientation" xml:space="preserve">
    <value>Rotationstracking:</value>
  </data>
  <data name="Captions.Filters.Position" xml:space="preserve">
    <value>Positionstracking-Filter:</value>
  </data>
  <data name="Captions.SkeletonFlip.Text" xml:space="preserve">
    <value>Tracker spiegeln wenn sie sich von der Kinect abwenden</value>
  </data>
  <data name="Captions.Sounds.Text" xml:space="preserve">
    <value>App-Sound aktivieren</value>
  </data>
  <data name="Captions.SoundsWhen.Line1.Text" xml:space="preserve">
    <value>Sounds treten beim Start, bei der Kalibrierung, bei Fehlern, </value>
  </data>
  <data name="Captions.SoundsWhen.Line2.Text" xml:space="preserve">
    <value>Skelettspiegelung oder beim Umschalten des Tracker-Freezes auf.</value>
  </data>
  <data name="Captions.TrackerPairs" xml:space="preserve">
    <value>Tracker-Paare verwenden</value>
  </data>
  <data name="Captions.TrackersAutoCheck.Text" xml:space="preserve">
    <value>Nach bereits vorhandene Tracker suchen und diese deaktivieren</value>
  </data>
  <data name="Captions.TrackersAutoSpawn.Text" xml:space="preserve">
    <value>Aktivierte Tracker beim Start automatisch verbinden</value>
  </data>
  <data name="Captions.TrackersRestart.Line1.Text" xml:space="preserve">
    <value>Ein- oder Ausschalten von einem Tracker</value>
  </data>
  <data name="Captions.TrackersRestart.Line2.Text" xml:space="preserve">
    <value>benötigt einen Neustart von SteamVR und Amethyst.</value>
  </data>
  <data name="Elements.ExtFlipCalibration.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Kalibrierung</value>
  </data>
  <data name="Elements.FlipToggle.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Durch Deaktivieren wird das Tracking gestoppt, wenn man sich umdreht.</value>
  </data>
  <data name="Filters.Orientation.Device" xml:space="preserve">
    <value>Vom Gerät abgeleitete Rotation</value>
  </data>
  <data name="Filters.Orientation.HMD" xml:space="preserve">
    <value>Headset verfolgen</value>
  </data>
  <data name="Filters.Orientation.MathBased" xml:space="preserve">
    <value>Softwareberechnete Rotation</value>
  </data>
  <data name="Filters.Orientation.Off" xml:space="preserve">
    <value>Rotation deaktivieren</value>
  </data>
  <data name="Filters.Position.Kalman" xml:space="preserve">
    <value>Erweiterter Kalman-Filter</value>
  </data>
  <data name="Filters.Position.LERP" xml:space="preserve">
    <value>Lineare Interpolation</value>
  </data>
  <data name="Filters.Position.LowPass" xml:space="preserve">
    <value>Tiefpass (Low Pass) Filter</value>
  </data>
  <data name="Filters.Position.Off" xml:space="preserve">
    <value>Filter deaktivieren</value>
  </data>
  <data name="ReManifest.Error.NotFound" xml:space="preserve">
    <value>Amethysts VR-Manifest konnte nicht installiert werden.
Überprüfe ob es im Stammverzeichnis (.exe) vorhanden ist.</value>
  </data>
  <data name="ReManifest.Error.Other" xml:space="preserve">
    <value>Amethysts VR-Manifest konnte nicht installiert werden.
Überprüfe die SteamVR-Protokolle und melde es im Amethyst-Team.</value>
  </data>
  <data name="ReRegister.Error.NotFound" xml:space="preserve">
    <value>Die ausführbare Amethyst-Crash-Handler-Datei wurde nicht gefunden.
Sie wird für die Registrierung benötigt. Überprüfe, ob sie vorhanden ist.</value>
  </data>
  <data name="Tips.FlipToggle.Buttons.Index" xml:space="preserve">
    <value>B, Grip und Trigger</value>
  </data>
  <data name="Tips.FlipToggle.Buttons.Oculus" xml:space="preserve">
    <value>A, Grip und Trigger</value>
  </data>
  <data name="Tips.FlipToggle.Buttons.VIVE" xml:space="preserve">
    <value>das Touchpad, Grip und Trigger</value>
  </data>
  <data name="Tips.FlipToggle.Buttons.WMR" xml:space="preserve">
    <value>die Menütaste, Grip und Trigger</value>
  </data>
  <data name="Tips.FlipToggle.Footer" xml:space="preserve">
    <value>Die Eingabe kann in den SteamVR-Eingabeeinstellungen geändert werden.</value>
  </data>
  <data name="Tips.FlipToggle.Header" xml:space="preserve">
    <value>Du kannst den Skelett-Flip auch in VR umschalten, indem du {0} auf deinem rechten Controller drückst.</value>
  </data>
  <data name="Titles.ExtFlip.Text" xml:space="preserve">
    <value>Verwende externe Taillentrackingsdaten statt Daten vom Headset</value>
  </data>
  <data name="Titles.SkeletonFlip.Text" xml:space="preserve">
    <value>Skelett-Flip</value>
  </data>
  <data name="Titles.Sounds.Text" xml:space="preserve">
    <value>Sounds</value>
  </data>
  <data name="Titles.TrackerConfig.Header.Text" xml:space="preserve">
    <value>Trackerkonfiguration</value>
  </data>
  <data name="Titles.TrackerConfig.Learn.Content" xml:space="preserve">
    <value>Erfahre mehr über diese Einstellungen</value>
  </data>
  <data name="Titles.Troubleshooting.Text" xml:space="preserve">
    <value>Fehlerbehebung</value>
  </data>
</root>