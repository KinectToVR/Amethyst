<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button.Error.Dismiss.Content" xml:space="preserve">
    <value>Dismiss</value>
  </data>
  <data name="Buttons.ReManifest.Content" xml:space="preserve">
    <value>Reinstaww steamvr manifests</value>
  </data>
  <data name="Buttons.ReRegister.Content" xml:space="preserve">
    <value>e-wegistew steamvr dwivew entwy</value>
  </data>
  <data name="Buttons.Reset.Content" xml:space="preserve">
    <value>dewete configuwwation and westawt</value>
  </data>
  <data name="Buttons.RestartSteamVR.Content" xml:space="preserve">
    <value>Westawt steamvr</value>
  </data>
  <data name="Captions.AutoStart.Text" xml:space="preserve">
    <value>Auwtomaticawwy stawt with steamvr</value>
  </data>
  <data name="Captions.CalibrateExtFlip.Text" xml:space="preserve">
    <value>Cwick to cawibwate</value>
  </data>
  <data name="Captions.ExtFlip.Text" xml:space="preserve">
    <value>When tuwwned on: amethyst wiww decide if u awe tuwwned back, 
checking the cuwwwentwy active waist twackew in steamvr</value>
  </data>
  <data name="Captions.FaceTheKinect.Text" xml:space="preserve">
    <value>Face the kinect! OwO </value>
  </data>
  <data name="Captions.Filters.Orientation.Text" xml:space="preserve">
    <value>Wotation twacking:</value>
  </data>
  <data name="Captions.Filters.Position.Text" xml:space="preserve">
    <value>Position twacking fiwtew:</value>
  </data>
  <data name="Captions.SkeletonFlip.Text" xml:space="preserve">
    <value>Miwwow twackews when tuwwning away fwom the kinect</value>
  </data>
  <data name="Captions.Sounds.Text" xml:space="preserve">
    <value>Enabwe app souwnds</value>
  </data>
  <data name="Captions.SoundsWhen.Line1.Text" xml:space="preserve">
    <value>Souwnds happen duwwing stawtuwp, cawibwation, ewwows, ow when toggwing twackew fweeze</value>
  </data>
  <data name="Captions.SoundsWhen.Line2.Text" xml:space="preserve">
    <value>ow skeweton miwwowing.</value>
  </data>
  <data name="Captions.TrackersAutoSpawn.Text" xml:space="preserve">
    <value>Auwtomaticawwy connect enabwed twackews at wauwnch</value>
  </data>
  <data name="Captions.TrackersRestart.Line1.Text" xml:space="preserve">
    <value>Enabwing ow disabwing a twackew wequwiwes westawting steamvr</value>
  </data>
  <data name="Captions.TrackersRestart.Line2.Text" xml:space="preserve">
    <value>and amethyst fow changes to take effect.</value>
  </data>
  <data name="Elements.ElbowsToggle.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Dishabling will shtop ewbow twackeengsh
fwom shpawninwg on app shtartup.</value>
  </data>
  <data name="Elements.ExtFlipCalibration.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Cawibwatiown</value>
  </data>
  <data name="Elements.FeetToggle.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Dishabling will shtop feeet twackeengsh
fwom shpawninwg on app shtartup.</value>
  </data>
  <data name="Elements.FlipToggle.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Dishabling will shtop twackeeng
fwom fwippwing wen yuu tun awound.</value>
  </data>
  <data name="Elements.KneesToggle.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Dishabling will shtop nee twackeengsh
fwom shpawninwg on app shtartup.</value>
  </data>
  <data name="Elements.WaistToggle.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Dishabling will shtop waisht twackeeng
fwom shpawninwg on app shtartup.</value>
  </data>
  <data name="Filters.Orientation.Device.Content" xml:space="preserve">
    <value> Device-infewwed rotation</value>
  </data>
  <data name="Filters.Orientation.HMD.Content" xml:space="preserve">
    <value>Fowwow headset</value>
  </data>
  <data name="Filters.Orientation.MathBased.Content" xml:space="preserve">
    <value>Softwawe-cawcuwwated rotation</value>
  </data>
  <data name="Filters.Orientation.Off.Content" xml:space="preserve">
    <value>Disabwe rotation</value>
  </data>
  <data name="Filters.Position.Kalman.Content" xml:space="preserve">
    <value>Extended kawman fiwtew</value>
  </data>
  <data name="Filters.Position.LERP.Content" xml:space="preserve">
    <value>Lineaw intewpowation</value>
  </data>
  <data name="Filters.Position.LowPass.Content" xml:space="preserve">
    <value>Low pass fiwtew</value>
  </data>
  <data name="Filters.Position.Off.Content" xml:space="preserve">
    <value>Disabwe fiwtew</value>
  </data>
  <data name="ReManifest.Error.NotFound" xml:space="preserve">
    <value>Amethyst vw manifest couwwdn't be instawwed. 
pwease check if it exists at the woot (.exe) path.</value>
  </data>
  <data name="ReManifest.Error.Other" xml:space="preserve">
    <value>Amethyst vw manifest couwwdn't be instawwed. 
pwease check steamvr wogs and considew wepowting it.</value>
  </data>
  <data name="ReRegister.Error.NotFound" xml:space="preserve">
    <value>Amethyst cwash handwew execuwtabwe was not fouwnd. 
it's needed fow the wewegistwation, pwease check if it's thewe.</value>
  </data>
  <data name="Titles.ExtFlip.Text" xml:space="preserve">
    <value> Use extewnaw waist twacking data instead of the headset</value>
  </data>
  <data name="Titles.SkeletonFlip.Text" xml:space="preserve">
    <value>Skeweton fwip</value>
  </data>
  <data name="Titles.Sounds.Text" xml:space="preserve">
    <value>Souwnds</value>
  </data>
  <data name="Titles.TrackerConfig.Elbows.Text" xml:space="preserve">
    <value>Ewbow twackews</value>
  </data>
  <data name="Titles.TrackerConfig.Feet.Text" xml:space="preserve">
    <value>Feet twackews</value>
  </data>
  <data name="Titles.TrackerConfig.Header.Text" xml:space="preserve">
    <value>Twackew configuwwation</value>
  </data>
  <data name="Titles.TrackerConfig.Knees.Text" xml:space="preserve">
    <value>Knee twackews</value>
  </data>
  <data name="Titles.TrackerConfig.Learn.Content" xml:space="preserve">
    <value>Wewn moww b't ths settinwgsh</value>
  </data>
  <data name="Titles.TrackerConfig.Waist.Text" xml:space="preserve">
    <value>Waist twackew</value>
  </data>
  <data name="Titles.Troubleshooting.Text" xml:space="preserve">
    <value>Twouwbweshooting</value>
  </data>
</root>