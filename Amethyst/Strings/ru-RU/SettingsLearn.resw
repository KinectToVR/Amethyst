<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Captions.Filters.Explanations.EKF.Text" xml:space="preserve">
    <value>Высокая задержка, но чистейшие результаты. Дрожание отсутствует,
фильтрация предсказывает перемещение, поэтому быстрые движения очень отзывчивы.</value>
  </data>
  <data name="Captions.Filters.Explanations.LERP.Text" xml:space="preserve">
    <value>Минимальная задержка, все движения выглядят быстрее, чем сенсор может их уловить.
Дрожание все еще заметно.</value>
  </data>
  <data name="Captions.Filters.Explanations.LowPass.Text" xml:space="preserve">
    <value>Небольшая задержка, фильтрация сглаживает дрожание и выглядит плавнее, чем полное её отсутствие.</value>
  </data>
  <data name="Captions.Filters.Explanations.None.Text" xml:space="preserve">
    <value>Исходные данные сенсора в 30Гц.</value>
  </data>
  <data name="Captions.Filters.Names.EKF.Text" xml:space="preserve">
    <value>- Расширенная фильтрация Калмана (Kalman)</value>
  </data>
  <data name="Captions.Filters.Names.LERP.Text" xml:space="preserve">
    <value>- Линейная интерполяция (Linear) (по умолчанию)</value>
  </data>
  <data name="Captions.Filters.Names.LowPass.Text" xml:space="preserve">
    <value>- Фильтрация низких частот (Low Pass)</value>
  </data>
  <data name="Captions.Filters.Names.None.Text" xml:space="preserve">
    <value>- Отключить фильтрацию</value>
  </data>
  <data name="Captions.ManageTrackers.Text" xml:space="preserve">
    <value>Когда вы включаете или отключаете трекеры они моментально переключаются,
при этом все еще присутствуя в списке устройств SteamVR.
Трекеры которые вы отключили будут отображаться в SteamVR как выключенные до его перезагрузки.
Если вы столкнетесь с проблемами обнаружения трекеров в приложениях, то сначала перезагрузите SteamVR.</value>
  </data>
  <data name="Captions.Orientation.Explanations.Default.Text" xml:space="preserve">
    <value>Эта настройка может быть нестабильной для некоторых пользователей Xbox One Kinect, если такое происходит,
то попробуйте использовать программное вращение. Kinect SDK предсказывает направление суставов основываясь на положении
каждого сустава в цепочке. Представьте, что от каждой части тела проведены стрелки в направлении ваших конечностей.
Для трекинга ног поведение отличается между разными моделями Kinect.
Для Xbox One, вращение базируется на кончиках стоп, поэтому ваши ноги могут поворачиваться.
Для Xbox 360, вращение базируется лишь на лодыжках, поэтому поворот ног отсутствует.
</value>
  </data>
  <data name="Captions.Orientation.Explanations.HMD.Text" xml:space="preserve">
    <value>Трекеры будут следовать в направлении вашей гарнитуры по оси Y (поворот в сторону).</value>
  </data>
  <data name="Captions.Orientation.Explanations.MathBased.Text" xml:space="preserve">
    <value>Эта настройка доступна только для трекинга ног.
Направление ваших ног рассчитывается от угла между лодыжкой и кончиком стопы.
Диапазон уменьшен на 50% чтобы избежать дрожания. Это позволяет добиться поворота ног для Xbox 360 Kinect.</value>
  </data>
  <data name="Captions.Orientation.Explanations.None.Text" xml:space="preserve">
    <value>Трекеры не вращаются, за исключением, когда отражение (skeleton flip) задействовано, если вы повернулись в противоположную сторону.</value>
  </data>
  <data name="Captions.Orientation.Introduction.Text" xml:space="preserve">
    <value>Когда включено, все настройки вращения подвержены отражению (skeleton flip).</value>
  </data>
  <data name="Captions.Orientation.Names.Default.Text" xml:space="preserve">
    <value>- Аппаратное вращение</value>
  </data>
  <data name="Captions.Orientation.Names.HMD.Text" xml:space="preserve">
    <value>- Следовать гарнитуре</value>
  </data>
  <data name="Captions.Orientation.Names.MathBased.Text" xml:space="preserve">
    <value>- Программное вращение</value>
  </data>
  <data name="Captions.Orientation.Names.None.Text" xml:space="preserve">
    <value>- Отключить вращение</value>
  </data>
  <data name="Captions.TrackerConfig.Text" xml:space="preserve">
    <value>Amethyst поддерживает до 7 трекеров. Дополнительные трекеры можно переключить через значок шестеренки.
Каждый трекер или набор трекеров имеет различные настройки, которые могут изменить поведение вращения и фильтрации для каждого из трекеров.
Это позволяет отдельно применить фильтрацию с наибольшим сглаживанием для ног и пояса, если вы собираетесь много сидеть,
при этом используя более отзывчивую фильтрацию локтей для наилучшего следования за вашими руками.</value>
  </data>
  <data name="Captions.TrackerConfigNote.Text" xml:space="preserve">
    <value>Примечание: некоторые из этих настроек имеют значение только тогда, когда используется Kinect.</value>
  </data>
  <data name="Titles.FilterSettings.Text" xml:space="preserve">
    <value>Настройки фильтрации:</value>
  </data>
  <data name="Titles.ManageTrackers.Text" xml:space="preserve">
    <value>Включение и отключение трекеров:</value>
  </data>
  <data name="Titles.RotationSettings.Text" xml:space="preserve">
    <value>Настройки вращения:</value>
  </data>
  <data name="Titles.TrackerConfig.Text" xml:space="preserve">
    <value>О конфигурации трекеров</value>
  </data>
</root>