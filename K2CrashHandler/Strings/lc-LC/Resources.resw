<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Content.AlreadyRunning" xml:space="preserve">
    <value>Looksh wike the app is awweady wunning
and you've twied to waunch a shecond instance,
this acshion is not cuwwentwy shuppowted.
 
Pwease csheck if the app isn't opened.
If pwobwem pewsistsh, pwessh the 'Get Rekt' button.</value>
  </data>
  <data name="Content.Crash.NoDevices" xml:space="preserve">
    <value>Thewe wewe no appwopwiate devices (pwugins) avaiwabwe to woad and use fow body twacking.
 
Pwease check if you have aww dependencies instawwed, wike pwopew Kinect SDK / Runtime and othew dependency wibwawies needed by youw devices.</value>
  </data>
  <data name="Content.Crash.OpenVR" xml:space="preserve">
    <value>The app couwdn't successfuwwy initiawize openvr (SteamVR) and decided to giv up.
 
Pwease check if steamvr is wunning and if youw hmd's pwesent and wowking. 
Additionawwy, you can westawt SteamVR and additionawwy check its wogs.</value>
  </data>
  <data name="Content.Crash.Panic" xml:space="preserve">
    <value>The main pwogwam woop has cwashed consequentwy mowe than 7 times so Amethyst was shut down.
 
Pwease check if aww youw devices / pwugins awe wowking and check wogs. Optionawwy, you can ewase the app configuwation and then twy wunning it again.</value>
  </data>
  <data name="Content.Crash.Unknown" xml:space="preserve">
    <value>Looks wike some weiwd thing happened to the app.
 
Don't panic yet, it (pwobabwy) isn't even youw fauwt.
 
Pwease twy we-wunning the app.
If pwobwem pewsists, gwab wogs and weach us on discowd.</value>
  </data>
  <data name="Content.Recovery" xml:space="preserve">
    <value>Looks wike you've manuawwy wan the cwash handwew. What wouwd you wike to do?

If Amethyst dwivew fow SteamVR ishn't beeng detecshted pwopewwy, you can we-wegistew the SteamVR dwivew (button bewow) and then twy again.</value>
  </data>
  <data name="PrimaryButton.AlreadyRunning" xml:space="preserve">
    <value>Get Rekt</value>
  </data>
  <data name="PrimaryButton.Crash.Default" xml:space="preserve">
    <value>See Papews</value>
  </data>
  <data name="PrimaryButton.Crash.Panic" xml:space="preserve">
    <value>Weset Config</value>
  </data>
  <data name="PrimaryButton.Crash.Unknown" xml:space="preserve">
    <value>Join Discowd</value>
  </data>
  <data name="PrimaryButton.Recovery" xml:space="preserve">
    <value>We-Wegistew Dwivew</value>
  </data>
  <data name="ReRegister.DriverNotFound" xml:space="preserve">
    <value>The Amethyst dwivew fowdew no see.
Is it somewhewe awound the cwash handwew?</value>
  </data>
  <data name="ReRegister.ExistingDrivers.Content" xml:space="preserve">
    <value>One ow mowe dwivews naemd 'Amethyst'
awweady exist, wemove them now?</value>
  </data>
  <data name="ReRegister.ExistingDrivers.PrimaryButton" xml:space="preserve">
    <value>Kiww</value>
  </data>
  <data name="ReRegister.ExistingDrivers.SecondaryButton" xml:space="preserve">
    <value>Nay</value>
  </data>
  <data name="ReRegister.FatalRegisterException" xml:space="preserve">
    <value>Couwdn't wegistew Amethyst Dwivew,
a fataw exception occuwwed.</value>
  </data>
  <data name="ReRegister.FatalRemoveException" xml:space="preserve">
    <value>Couwdn't wemowe Amethyst Dwivew,
a fataw exception occuwwed.</value>
  </data>
  <data name="ReRegister.Finished" xml:space="preserve">
    <value>U win, showsh!</value>
  </data>
  <data name="ReRegister.KillSteamVR.Content" xml:space="preserve">
    <value>SteamVR musht get rekt now
To wegistew pwopewwy, kiww?</value>
  </data>
  <data name="ReRegister.KillSteamVR.PrimaryButton" xml:space="preserve">
    <value>Get Rekt</value>
  </data>
  <data name="ReRegister.KillSteamVR.SecondaryButton" xml:space="preserve">
    <value>Nay</value>
  </data>
  <data name="ReRegister.OpenVRPathsError" xml:space="preserve">
    <value>Openvrpaths couwdn't be wead!
Make suwe it's not cowwupted,
and wun SteamVR at weast ons.</value>
  </data>
  <data name="ReRegister.OpenVRPathsWriteError" xml:space="preserve">
    <value>Couwdn't wegistew Amethyst Dwivew,
openvwpaths wwite ewwow.</value>
  </data>
  <data name="ReRegister.SteamVRNotFound" xml:space="preserve">
    <value>SteamVR couwdn't be found,
make suwe it dowwin ok.</value>
  </data>
  <data name="SecondaryButton.Recovery" xml:space="preserve">
    <value>Cwose</value>
  </data>
  <data name="Title.AlreadyRunning" xml:space="preserve">
    <value>Amethyst awweady running!</value>
  </data>
  <data name="Title.Crash" xml:space="preserve">
    <value>Amethysht's givn u up!</value>
  </data>
  <data name="Title.Recovery" xml:space="preserve">
    <value>Amethysht Wecovewy</value>
  </data>
</root>